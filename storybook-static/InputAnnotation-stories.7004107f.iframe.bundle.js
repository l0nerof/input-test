"use strict";(self.webpackChunkinput_test=self.webpackChunkinput_test||[]).push([[734],{"./stories/InputAnnotation.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>InputAnnotation_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),InputGroup=__webpack_require__("./stories/components/InputGroup.tsx");function InputAnnotation({infoIcon,helpText,darkMode,helpIconText,error,...props}){const mode=darkMode?"input-annotation--helpText--dark":"",errorMode=error?"input-annotation--helpText--error":"";return(0,jsx_runtime.jsxs)("div",{className:"input-annotation",children:[(0,jsx_runtime.jsx)(InputGroup.A,{...props,error,darkMode,children:infoIcon&&(0,jsx_runtime.jsxs)("div",{className:"input-annotation--wrapper",children:[(0,jsx_runtime.jsx)("svg",{className:"input-annotation--infoIcon",children:(0,jsx_runtime.jsx)("use",{href:"/symbol-defs.svg#icon-help"})}),helpIconText&&(0,jsx_runtime.jsx)("div",{className:"input-annotation--tooltip "+(darkMode?"input-annotation--tooltip--dark":""),children:helpIconText})]})}),helpText&&(0,jsx_runtime.jsx)("p",{className:["input-annotation--helpText",errorMode,mode].join(" "),children:helpText})]})}const components_InputAnnotation=InputAnnotation;InputAnnotation.__docgenInfo={description:"",methods:[],displayName:"InputAnnotation",props:{id:{required:!1,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"union",raw:'"extra-small" | "medium" | "large" | "extra-large"',elements:[{name:"literal",value:'"extra-small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'},{name:"literal",value:'"extra-large"'}]},description:"The size of the input text.\r\n- `extra-small`: Smallest size\r\n- `medium`: Default size\r\n- `large`: Larger size\r\n- `extra-large`: Largest size"},inputValue:{required:!1,tsType:{name:"string"},description:"The value of the input field."},placeholder:{required:!1,tsType:{name:"string"},description:"Placeholder text shown in the input field."},className:{required:!1,tsType:{name:"string"},description:"Additional custom CSS classes."},darkMode:{required:!1,tsType:{name:"boolean"},description:"Enable dark mode styling."},quiet:{required:!1,tsType:{name:"boolean"},description:"Quiet mode with no border."},disabled:{required:!1,tsType:{name:"boolean"},description:"Disable the input field."},alignment:{required:!1,tsType:{name:"union",raw:'"left" | "right"',elements:[{name:"literal",value:'"left"'},{name:"literal",value:'"right"'}]},description:"Text alignment in the input field.\r\n- `left`: Aligns text to the left\r\n- `right`: Aligns text to the right"},required:{required:!1,tsType:{name:"boolean"},description:"Require the input field."},children:{required:!1,tsType:{name:"ReactNode"},description:"Content to be displayed inside the input field, such as icons."},error:{required:!1,tsType:{name:"boolean"},description:"Flag to indicate if the input field is in an error state."},onFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback when the input field is focused."},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback when the input value changes."},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Callback when the input field is clicked."},htmlFor:{required:!1,tsType:{name:"string"},description:""},labelValue:{required:!0,tsType:{name:"string"},description:"The value of the input label."},position:{required:!1,tsType:{name:"union",raw:'"top" | "side"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"side"'}]},description:"Label positioning.\r\n- `top`: Aligns label at the top\r\n- `side`: Aligns label at the side"},optional:{required:!1,tsType:{name:"boolean"},description:"Add optional message to the input label."},useAsterisk:{required:!1,tsType:{name:"boolean"},description:"Use Asterisk mark in the label."},iconBefore:{required:!1,tsType:{name:"boolean"},description:"Enable icon before input text."},iconAfter:{required:!1,tsType:{name:"boolean"},description:"Enable icon after input text."},shortKey:{required:!1,tsType:{name:"boolean"},description:"Enable shortkey in the input text."},infoIcon:{required:!1,tsType:{name:"boolean"},description:""},helpText:{required:!1,tsType:{name:"string"},description:""},helpIconText:{required:!1,tsType:{name:"string"},description:""}}};const InputAnnotation_stories={title:"Example/InputAnnotation",component:components_InputAnnotation,parameters:{layout:"centered"},tags:["autodocs"]},Example={args:{htmlFor:"email",id:"email",labelValue:"Email",position:"top",size:"medium",alignment:"left"}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  args: {\n    htmlFor: "email",\n    id: "email",\n    labelValue: "Email",\n    position: "top",\n    size: "medium",\n    alignment: "left"\n  }\n}',...Example.parameters?.docs?.source}}}}}]);